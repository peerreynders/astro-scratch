@use 'sass:map';
@use 'sass:string';
@use '../function' as fn;
@use 'color';
@use 'font';
@use 'size';

$border-radius: 0.25rem;

@function from-color($key) {
	@return fn.from-map(color.$color, '$color', 'Color', null, $key);
}

@function maybe-color($key) {
	@return fn.maybe-map(color.$color, $key);
}

@function from-font-family($key) {
	@return string.unquote(
		fn.from-map(font.$family, '$family', 'Font family', null, $key)
	);
}

@function from-font-weight($key) {
	@return fn.from-map(font.$weight, '$weight', 'Font weight', null, $key);
}

@function from-line-height($key) {
	@return fn.from-map(font.$height, '$height', 'Line height', null, $key);
}

@function from-size($key) {
	@return fn.from-map(
		size.$size-scale,
		'$size-scale',
		'Size',
		size.$base-size,
		$key
	);
}

@mixin at-breakpoint($key) {
	$target: map.get(size.$breakpoint-target, $key);

	@if $target {
		@media #{ $target } {
			@content;
		}
	} @else {
		@warn #{ 'Breakpoint, ‘' + $key + '’ not found in `$breakpoint-target`.' };
	}
}
